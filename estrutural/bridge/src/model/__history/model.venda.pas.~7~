unit model.venda;

interface

uses
  model.interfaces, model.entidade.venda,
  System.Generics.Collections,System.JSON,GBJSON.Helper, GBJSON.Interfaces;

type
  TModelVenda = class(TInterfacedObject, iSource<TVenda>)
    private
      FList : TList<TVenda>;
    public
      constructor Create(aList : TJSONArray);
      destructor Destroy; override;
      class function New(aList : TJSONArray) : iSource<TVenda>;
      function Exportar(aValue : iExport<TVenda>) : iSource<TVenda>;
  end;

implementation

{ TModelVenda }

constructor TModelVenda.Create(aList : TJSONArray);
begin
  //FList :=  TList<TVenda>.Create;
  FList := TGBJSONDefault.Serializer<TVenda>.JsonStringToList(aList.ToString);
end;

destructor TModelVenda.Destroy;
begin
  FList.Free;
  inherited;
end;

function TModelVenda.Exportar(aValue: iExport<TVenda>): iSource<TVenda>;
var
  I: Integer;
begin
  Result := Self;
  for I := 0 to Pred(FList.Count) do
      aValue.GerarRegistros(FList.Items[I]);
end;

class function TModelVenda.New(aList : TJSONArray): iSource<TVenda>;
begin
  Result := self.Create(aList);
end;

end.
